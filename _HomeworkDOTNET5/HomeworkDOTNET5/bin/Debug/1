<!DOCTYPE html>
<html lang="zh-cn">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta name="referrer" content="origin" />
    <meta name="description" content="前面我们了解了elk集群中的logstash的用法，使用logstash处理日志挺好的，但是有一个缺陷，就是太慢了；当然logstash慢的原因是它依赖jruby虚拟机，jruby虚拟机就是用java" />
    <meta property="og:description" content="前面我们了解了elk集群中的logstash的用法，使用logstash处理日志挺好的，但是有一个缺陷，就是太慢了；当然logstash慢的原因是它依赖jruby虚拟机，jruby虚拟机就是用java" />
    <meta http-equiv="Cache-Control" content="no-transform" />
    <meta http-equiv="Cache-Control" content="no-siteapp" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <title>日志分析平台ELK之日志收集器filebeat - Linux-1874 - 开发者的网上家园</title>
    <link id="favicon" rel="shortcut icon" href="//common.cnblogs.com/favicon.svg" type="image/svg+xml" />
    
    <link rel="stylesheet" href="/css/blog-common.min.css?v=dktCmaTYc_s0a4EnvC6tuH5wYElIJN_131iOybZOKro" />
    <link id="MainCss" rel="stylesheet" href="/skins/custom/bundle-custom.min.css?v=1ssrnY3Il79Ok472qeVrpxlSprSXcHhYPgZC5S3wtVM" />
    <link type="text/css" rel="stylesheet" href="https://www.cnblogs.com/qiuhom-1874/custom.css?v=5DxGq/mDuhLL7SMzbDxuUtH1yB4=" />
    <link id="mobile-style" media="only screen and (max-width: 767px)" type="text/css" rel="stylesheet" href="/skins/custom/bundle-custom-mobile.min.css?v=KtAK50iXMDcU4jOl_mm1P0j3gXUtdRHDhFdu7YlsVVg" />
    
    <link type="application/rss+xml" rel="alternate" href="https://www.cnblogs.com/qiuhom-1874/rss" />
    <link type="application/rsd+xml" rel="EditURI" href="https://www.cnblogs.com/qiuhom-1874/rsd.xml" />
    <link type="application/wlwmanifest+xml" rel="wlwmanifest" href="https://www.cnblogs.com/qiuhom-1874/wlwmanifest.xml" />
    <script>
        var currentBlogId = 465299;
        var currentBlogApp = 'qiuhom-1874';
        var cb_enable_mathjax = false;
        var isLogined = false;
        var isBlogOwner = false;
        var skinName = 'Custom';
        var visitorUserId = '';
    </script>
        <script>
            var currentPostDateAdded = '2020-10-04 07:29';
        </script>
    <script src="https://common.cnblogs.com/scripts/jquery-2.2.0.min.js"></script>
    <script src="/js/blog-common.min.js?v=quLP6V96NCUwrp9e9p4Tc3ZzspjwpbJyGVOAQHoms5M"></script>
    
    
    
</head>
<body>
    <a name="top"></a>
    <div id="top_nav" class="navbar navbar-custom">
        <nav id="nav_main" class="navbar-main">
            <ul id="nav_left" class="navbar-list navbar-left">
                <li class="navbar-branding">
                    <a href="https://www.cnblogs.com/" title="开发者的网上家园"><img src="/images/logo.svg?v=R9M0WmLAIPVydmdzE2keuvnjl-bPR7_35oHqtiBzGsM" alt="博客园Logo" /></a>
                </li>
                <li><a href="/" onclick="ga('send', 'event', 'Link', 'click', 'skin-navbar-sitehome')">首页</a></li>
                <li><a href="https://news.cnblogs.com/" onclick="ga('send', 'event', 'Link', 'click', 'skin-navbar-news')">新闻</a></li>
                <li><a href="https://q.cnblogs.com/" onclick="ga('send', 'event', 'Link', 'click', 'skin-navbar-q')">博问</a></li>
                <li><a id="nav_brandzone" href="https://brands.cnblogs.com/" onclick="ga('send', 'event', 'Link', 'click', 'skin-navbar-brands')">专区</a></li>
                <li><a href="https://ing.cnblogs.com/" onclick="ga('send', 'event', 'Link', 'click', 'skin-navbar-ing')">闪存</a></li>
                <li><a href="https://edu.cnblogs.com/" onclick="ga('send', 'event', 'Link', 'click', 'skin-navbar-edu')">班级</a></li>
            </ul>
            <ul id="nav_right" class="navbar-list navbar-right">
                <li>
                    <form id="zzk_search" class="navbar-search" action="https://zzk.cnblogs.com/s" method="get">
                        <input name="w" id="zzk_search_input" placeholder="代码改变世界" type="text" tabindex="3" />
                        <button type="submit" id="zzk_search_button">
                            <img src="/images/aggsite/search.svg" alt="搜索" />
                        </button>
                    </form>
                </li>
                <li id="navbar_login_status" class="navbar-list">
                    <a id="navblog-myblog-icon" class="navbar-user-info navbar-blog" href="https://passport.cnblogs.com/GetBlogApplyStatus.aspx" alt="我的博客" title="我的博客">
                        <img id="myblog_icon" class="navbar-icon" src="/images/aggsite/myblog.svg" alt="我的博客" />
                    </a>
                    <a class="navbar-user-info navbar-message navbar-icon-wrapper" href="https://msg.cnblogs.com/" alt="短消息" title="短消息">
                        <img id="msg_icon" class="navbar-icon" src="/images/aggsite/message.svg?v=oS4PkibyMjZ9rGD5XAcLt99uW_s76Javy2up4dbnZNY" alt="短消息" />
                        <span id="msg_count" style="display: none"></span>
                    </a>
                    <div id="user_info" class="navbar-user-info dropdown">
                        <a class="dropdown-button" href="https://home.cnblogs.com/">
                            <img id="user_icon" class="navbar-avatar" src="/images/aggsite/avatar-default.svg" alt="用户头像" />
                        </a>
                        <div class="dropdown-menu">
                            <a id="navblog-myblog-text" href="https://passport.cnblogs.com/GetBlogApplyStatus.aspx">我的博客</a>
                            <a href="https://home.cnblogs.com/">我的园子</a>
                            <a href="https://account.cnblogs.com/settings/account">账号设置</a>
                            <a href="javascript:void(0)" onclick="logout();">退出登录</a>
                        </div>
                    </div>
                    <a class="navbar-anonymous" href="https://account.cnblogs.com/signup/">注册</a>
                    <a class="navbar-anonymous" href="https://account.cnblogs.com/signin/?returnUrl=https://www.cnblogs.com/">登录</a>
                </li>
            </ul>
        </nav>
    </div>

    <div id="page_begin_html">
        <script>loadPageBeginHtml();</script>
    </div>
    
<!--done-->
<div id="home">
<div id="header">
	<div id="blogTitle">
        <a id="lnkBlogLogo" href="https://www.cnblogs.com/qiuhom-1874/"><img id="blogLogo" src="/skins/custom/images/logo.gif" alt="返回主页" /></a>		
		
<!--done-->
<h1><a id="Header1_HeaderTitle" class="headermaintitle HeaderMainTitle" href="https://www.cnblogs.com/qiuhom-1874/">1874</a>
</h1>
<h2>

</h2>




		
	</div><!--end: blogTitle 博客的标题和副标题 -->
	<div id="navigator">
		
<ul id="navList">
<li>
</li>
<li>
<a id="blog_nav_myhome" class="menu" href="https://www.cnblogs.com/qiuhom-1874/">
首页</a>
</li>
<li>


</li>
<li>
<a id="blog_nav_contact" class="menu" href="https://msg.cnblogs.com/send/Linux-1874">
联系</a></li>
<li>
<a id="blog_nav_rss" class="menu" href="javascript:void(0)" data-rss="https://www.cnblogs.com/qiuhom-1874/rss/">
订阅</a>
<!--<partial name="./Shared/_XmlLink.cshtml" model="Model" /></li>--></li>
<li>
<a id="blog_nav_admin" class="menu" href="https://i.cnblogs.com/">
管理</a>
</li>
</ul>


		<div class="blogStats">
			
			<span id="stats_post_count">随笔 - 
154&nbsp; </span>
<span id="stats_article_count">文章 - 
0&nbsp; </span>
<span id="stats-comment_count">评论 - 
38</span>

			
		</div><!--end: blogStats -->
	</div><!--end: navigator 博客导航栏 -->
</div><!--end: header 头部 -->

<div id="main">
	<div id="mainContent">
	<div class="forFlow">
		<div id="post_detail">
    <!--done-->
    <div id="topics">
        <div class="post">
            <h1 class = "postTitle">
                
<a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/qiuhom-1874/p/13767152.html">
    <span>日志分析平台ELK之日志收集器filebeat</span>
    


</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                
    <div id="cnblogs_post_description" style="display: none">
        <img src="https://images.cnblogs.com/cnblogs_com/qiuhom-1874/1655970/o_200516034012elastic.jpg" class="desc_img">
前面我们了解了elk集群中的logstash的用法，使用logstash处理日志挺好的，但是有一个缺陷，就是太慢了；当然logstash慢的原因是它依赖jruby虚拟机，jruby虚拟机就是用java语言开发的ruby虚拟机，本身java程序运行在jvm上就已经很慢了，而logstash还要运行在用java语言开发的ruby虚拟机上，就相当于虚拟机上跑一个虚拟机，可想而知；如果我们只需要收集和处理日志，在agent端如果运行logstash，显得格外的消耗资源；为了解决这种问题，elastic开发了一款更加轻量级的日志收集器beats；而filebeat只是其中的一种，它是基于收集本地日志文件中的内容，然后输出到某个地方；中间不会对日志做过多的处理；有点类似rsyslog，只做日志转发；
    </div>
<div id="cnblogs_post_body" class="blogpost-body">
    <p>　　前面我们了解了elk集群中的logstash的用法，使用logstash处理日志挺好的，但是有一个缺陷，就是太慢了；当然logstash慢的原因是它依赖jruby虚拟机，jruby虚拟机就是用java语言开发的ruby虚拟机，本身java程序运行在jvm上就已经很慢了，而logstash还要运行在用java语言开发的ruby虚拟机上，就相当于虚拟机上跑一个虚拟机，可想而知；如果我们只需要收集和处理日志，在agent端如果运行logstash，显得格外的消耗资源；为了解决这种问题，elastic开发了一款更加轻量级的日志收集器beats；而filebeat只是其中的一种，它是基于收集本地日志文件中的内容，然后输出到某个地方；中间不会对日志做过多的处理；有点类似rsyslog，只做日志转发；如果我们需要对日志做处理，我们可以把filebeat的输出源配置成logstash，让logstash运行在一个独立的服务器上，专门做日志处理；</p>
<p>　　filebeat收集日志过程</p>
<p><img src="https://img2020.cnblogs.com/blog/1503305/202010/1503305-20201004134807363-1484740335.png" alt="" loading="lazy"></p>
<p>　　提示：以上是filebeat收集日志，然后把日志转发给logstash进行分析，然后logstash把filebeat发送过来的日志，做切词，分析，处理以后，然后在把日志发送给elasticsearch存储；</p>
<p><img src="https://img2020.cnblogs.com/blog/1503305/202010/1503305-20201004135758089-1105623035.png" alt="" loading="lazy"></p>
<p>　　提示：如果后端的filebeat一旦增多，logstash的压力会非常大，为了解决这样的问题，我们可在中间加redis是做临时缓存；然后logstash就到redis里读日志；然后再把读到的日志存储到elasticsearch中；当然filebeat也是可以直接将日志数据发送给elasticsearch进行存储；</p>
<p>　　filebeat安装</p>
<p>　　下载同elasticsearch版本的filebeat rpm包</p>
<div class="cnblogs_Highlighter">
<pre class="brush:bash;gutter:true;">[root@node03 ~]# wget https://artifacts.elastic.co/downloads/beats/filebeat/filebeat-6.8.12-x86_64.rpm
--2020-10-04 14:03:03--  https://artifacts.elastic.co/downloads/beats/filebeat/filebeat-6.8.12-x86_64.rpm
Resolving artifacts.elastic.co (artifacts.elastic.co)... 151.101.230.222, 2a04:4e42:36::734
Connecting to artifacts.elastic.co (artifacts.elastic.co)|151.101.230.222|:443... connected.
HTTP request sent, awaiting response... 200 OK
Length: 11904164 (11M) [application/octet-stream]
Saving to: ‘filebeat-6.8.12-x86_64.rpm’

100%[================================================================================&gt;] 11,904,164  9.76KB/s   in 16m 35s

2020-10-04 14:19:41 (11.7 KB/s) - ‘filebeat-6.8.12-x86_64.rpm’ saved [11904164/11904164]

[root@node03 ~]# ll
total 184540
-rw-r--r-- 1 root root  11904164 Aug 18 19:35 filebeat-6.8.12-x86_64.rpm
-rw-r--r-- 1 root root 177059640 Aug 18 19:41 logstash-6.8.12.rpm
[root@node03 ~]# 
</pre>
</div>
<p>　　安装filebeat-6.8.12.rpm包</p>
<div class="cnblogs_Highlighter">
<pre class="brush:bash;gutter:true;">[root@node03 ~]# yum install ./filebeat-6.8.12-x86_64.rpm -y
Loaded plugins: fastestmirror
Examining ./filebeat-6.8.12-x86_64.rpm: filebeat-6.8.12-1.x86_64
Marking ./filebeat-6.8.12-x86_64.rpm to be installed
Resolving Dependencies
--&gt; Running transaction check
---&gt; Package filebeat.x86_64 0:6.8.12-1 will be installed
--&gt; Finished Dependency Resolution

Dependencies Resolved

==========================================================================================================================
 Package                  Arch                   Version                    Repository                               Size
==========================================================================================================================
Installing:
 filebeat                 x86_64                 6.8.12-1                   /filebeat-6.8.12-x86_64                  38 M

Transaction Summary
==========================================================================================================================
Install  1 Package

Total size: 38 M
Installed size: 38 M
Downloading packages:
Running transaction check
Running transaction test
Transaction test succeeded
Running transaction
  Installing : filebeat-6.8.12-1.x86_64                                                                               1/1 
  Verifying  : filebeat-6.8.12-1.x86_64                                                                               1/1 

Installed:
  filebeat.x86_64 0:6.8.12-1                                                                                              

Complete!
[root@node03 ~]# 
</pre>
</div>
<p>　　示例：配置filebeat收集httpd的日志，然后将收集的日志输出到logstash</p>
<p><img src="https://img2020.cnblogs.com/blog/1503305/202010/1503305-20201004142614419-596556201.png" alt="" loading="lazy"></p>
<p>　　提示：以上配置表示开启filebeat插件收集/var/log/httpd/access_log中的日志；</p>
<p><img src="https://img2020.cnblogs.com/blog/1503305/202010/1503305-20201004142925396-108228385.png" alt="" loading="lazy"></p>
<p>　　提示：以上配置表示把filebeat收集的日志发送给node03：5044；</p>
<p>　　配置node03的logstash输入数据监听5044端口</p>
<p><img src="https://img2020.cnblogs.com/blog/1503305/202010/1503305-20201004143255452-1536169649.png" alt="" loading="lazy"></p>
<p>　　提示：以上配置表示启动logstash中的beats插件作为数据输入，并监听5044端口；然后logstash将处理后端日志数据输出到标准输出；</p>
<p>　　启动filebeat和logstash</p>
<p><img src="https://img2020.cnblogs.com/blog/1503305/202010/1503305-20201004144743375-1163097532.png" alt="" loading="lazy"></p>
<p>　　提示：可以看到logstash启动时，它监听5044端口；</p>
<p>　　用其他主机模拟互联网用户访问node03的httpd提供的页面</p>
<div class="cnblogs_Highlighter">
<pre class="brush:bash;gutter:true;">[root@node01 ~]# curl -H "X-Forwarded-For:$[$RANDOM%223+1].$[RANDOM%255].$[RANDOM%255].$[RANDOM%255]" http://node03/test$[$RANDOM%20+1].html
page 18
[root@node01 ~]# 
</pre>
</div>
<p>　　在node03的logstash的标准输出上，看看是否收集到httpd的访问日志？</p>
<div class="cnblogs_Highlighter">
<pre class="brush:bash;gutter:true;">/usr/share/logstash/vendor/bundle/jruby/2.5.0/gems/awesome_print-1.7.0/lib/awesome_print/formatters/base_formatter.rb:31: warning: constant ::Fixnum is deprecated
{
            "host" =&gt; {
                   "os" =&gt; {
            "platform" =&gt; "centos",
             "version" =&gt; "7 (Core)",
              "family" =&gt; "redhat",
                "name" =&gt; "CentOS Linux",
            "codename" =&gt; "Core"
        },
        "containerized" =&gt; false,
         "architecture" =&gt; "x86_64",
                 "name" =&gt; "node03.test.org",
                   "id" =&gt; "002f3e572e3e4886ac9e98db8584b467"
    },
      "prospector" =&gt; {
        "type" =&gt; "log"
    },
            "auth" =&gt; "-",
        "clientip" =&gt; "25.99.168.124",
           "agent" =&gt; "\"curl/7.29.0\"",
            "tags" =&gt; [
        [0] "beats_input_codec_plain_applied"
    ],
      "@timestamp" =&gt; 2020-10-04T06:49:34.000Z,
        "@version" =&gt; "1",
           "bytes" =&gt; "8",
          "offset" =&gt; 0,
            "verb" =&gt; "GET",
        "referrer" =&gt; "\"-\"",
          "source" =&gt; "/var/log/httpd/access_log",
             "log" =&gt; {
        "file" =&gt; {
            "path" =&gt; "/var/log/httpd/access_log"
        }
    },
    "clientipInfo" =&gt; {
        "continent_code" =&gt; "EU",
             "longitude" =&gt; -0.1224,
         "country_code2" =&gt; "GB",
                    "ip" =&gt; "25.99.168.124",
          "country_name" =&gt; "United Kingdom",
         "country_code3" =&gt; "GB",
              "location" =&gt; {
            "lat" =&gt; 51.4964,
            "lon" =&gt; -0.1224
        },
              "timezone" =&gt; "Europe/London",
              "latitude" =&gt; 51.4964
    },
            "beat" =&gt; {
        "hostname" =&gt; "node03.test.org",
         "version" =&gt; "6.8.12",
            "name" =&gt; "node03.test.org"
    },
         "request" =&gt; "/test18.html",
           "input" =&gt; {
        "type" =&gt; "log"
    },
           "ident" =&gt; "-",
        "response" =&gt; "200",
     "httpversion" =&gt; "1.1"
}
</pre>
</div>
<p>　　提示：在node03的标准输出上能够看到我们刚才访问httpd的访问日志；</p>
<p>　　示例：配置filebeat将日志输出到elasticsearch</p>
<p><img src="https://img2020.cnblogs.com/blog/1503305/202010/1503305-20201004145900510-356562396.png" alt="" loading="lazy"></p>
<p>　　重启filebeat</p>
<p><img src="https://img2020.cnblogs.com/blog/1503305/202010/1503305-20201004145957488-1104971306.png" alt="" loading="lazy"></p>
<p>　　验证：访问httpd看看elasticsearch中是否有保存httpd的访问日志？</p>
<p><img src="https://img2020.cnblogs.com/blog/1503305/202010/1503305-20201004150129800-460651237.png" alt="" loading="lazy"></p>
<p>　　在elasticsearch中查看是否有新的index生成？</p>
<p><img src="https://img2020.cnblogs.com/blog/1503305/202010/1503305-20201004150236480-2117060826.png" alt="" loading="lazy"></p>
<p>　　提示：可以看到es上有一个新的index生成；</p>
<p>　　查看es上存储的日志内容</p>
<p><img src="https://img2020.cnblogs.com/blog/1503305/202010/1503305-20201004150622792-638277479.png" alt="" loading="lazy"></p>
<p>　　提示：从上面的返回的日志，存放在es中的日志并没有做拆分，说明filebeat只是把httpd的日志当作message字段的值处理，并没有去把ip地址信息做拆分；所以要想实现把日志内容拆分成不同字段，我们可以借助logstash，当然也可以在httpd上直接将日志格式记录为json格式，然后再由filebeat将日志信息传给es存储；</p>
<p>　　示例：配置filebeat将收集的日志信息输出到redis</p>
<p>&nbsp;<img src="https://img2020.cnblogs.com/blog/1503305/202010/1503305-20201004183103520-140971755.png" alt="" loading="lazy"></p>
<p>　　提示：以上配置是配置filebeat将收集到的日志输出到redis；这里需要注意一点，这个配置文件是yml格式的文件，需要注意下面的缩进关系要对其；其次filebeat它不支持多路输出，例如，配置filebeat 输出到logstash，又配置filebeat输出到redis，这个它不支持，它支持单路输出；</p>
<p>&nbsp;　　重新启动filebeat</p>
<p><img src="https://img2020.cnblogs.com/blog/1503305/202010/1503305-20201004183544734-1780026222.png" alt="" loading="lazy"></p>
<p>　　用其他主机模拟访问httpd</p>
<p><img src="https://img2020.cnblogs.com/blog/1503305/202010/1503305-20201004183701215-190806649.png" alt="" loading="lazy"></p>
<p>　　验证：去node04上的redis 3号库查看是否有key生成？是否有数据？</p>
<p><img src="https://img2020.cnblogs.com/blog/1503305/202010/1503305-20201004183857652-2119995140.png" alt="" loading="lazy"></p>
<p>　　提示：可以看到此时redis的3号库有指定key生成，对应key里面也存了httpd的访问日志；</p>
<p>　　配置logstash到redis上读数据，并删除filebeat的冗余字段</p>
<div class="cnblogs_Highlighter">
<pre class="brush:bash;gutter:true;">[root@node03 ~]# cat /etc/logstash/conf.d/httpd-es.conf
input {
    redis {
        host =&gt; ["node04"]
        port =&gt; 6379
        password =&gt; "admin"
        key =&gt; "filebeat-node03-httpd-access_log"
        db =&gt; 3
        data_type =&gt; "list"
    }
}

filter {
    grok {
        match =&gt; {"message" =&gt; "%{HTTPD_COMBINEDLOG}" }
        remove_field =&gt; "message"
    }
    date {
        match =&gt; ["timestamp","dd/MMM/YYYY:H:m:s Z"]
        remove_field =&gt; "timestamp"
    }
    geoip {
        source =&gt; "clientip"
        target =&gt; "geoip"
        database =&gt; "/etc/logstash/geoip/GeoLite2-City.mmdb"
    }
    mutate {
        rename =&gt; ["geoip", "clientipInfo" ]
        remove_field =&gt; ["@metadata","prospector","input","beat","host","id","containerized"]
    }
}

output {
#    elasticsearch {
#       hosts =&gt; ["http://node01:9200","http://node02:9200"]
#       index =&gt; "httpd.log"
#       codec =&gt; "rubydebug"
#    }
    stdout { codec =&gt; "rubydebug" }
}

[root@node03 ~]# 
</pre>
</div>
<p>　　测试语法</p>
<p><img src="https://img2020.cnblogs.com/blog/1503305/202010/1503305-20201004190811569-1064397190.png" alt="" loading="lazy"></p>
<p>　　启动logstash</p>
<p><img src="https://img2020.cnblogs.com/blog/1503305/202010/1503305-20201004191146546-1425162973.png" alt="" loading="lazy"></p>
<p>　　查看输出到标准输出的日志信息是否还有filebeat生成的多余字段？</p>
<p><img src="https://img2020.cnblogs.com/blog/1503305/202010/1503305-20201004191253078-1186916708.png" alt="" loading="lazy"></p>
<p>　　提示：现在从redis读出来的数据，然后经由logstash处理以后，filebeat生成的多余字段就删除了；后续我们就可以直接将这些日志数据放到es中存储；</p>
</div>
<div id="MySignature"></div>
<div class="clear"></div>
<div id="blog_post_info_block">
    <div id="blog_post_info"></div>
    <div class="clear"></div>
    <div id="post_next_prev"></div>
</div>
            </div>
            <div class="postDesc">posted @ 
<span id="post-date">2020-10-04 19:29</span>&nbsp;
<a href="https://www.cnblogs.com/qiuhom-1874/">Linux-1874</a>&nbsp;
阅读(<span id="post_view_count">80</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=13767152" rel="nofollow">编辑</a>&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(13767152);return false;">收藏</a></div>
        </div>
	    
	    
    </div><!--end: topics 文章、评论容器-->
</div>
<script src="https://common.cnblogs.com/highlight/9.12.0/highlight.min.js"></script>
<script>markdown_highlight();</script>
<script>
    var allowComments = true, cb_blogId = 465299, cb_blogApp = 'qiuhom-1874', cb_blogUserGuid = 'c59550a8-b7e6-4fd5-7bec-08d6284f5a10';
    var cb_entryId = 13767152, cb_entryCreatedDate = '2020-10-04 19:29', cb_postType = 1;
    loadViewCount(cb_entryId);
</script><a name="!comments"></a>
<div id="blog-comments-placeholder"></div>
<script>
    var commentManager = new blogCommentManager();
    commentManager.renderComments(0);
</script>
<div id="comment_form" class="commentform">
    <a name="commentform"></a>
    <div id="divCommentShow"></div>
    <div id="comment_nav"><span id="span_refresh_tips"></span><a href="javascript:void(0);" onclick="return RefreshCommentList();" id="lnk_RefreshComments" runat="server" clientidmode="Static">刷新评论</a><a href="#" onclick="return RefreshPage();">刷新页面</a><a href="#top">返回顶部</a></div>
    <div id="comment_form_container"></div>
    <div class="ad_text_commentbox" id="ad_text_under_commentbox"></div>
    <div id="ad_t2"></div>
    <div id="opt_under_post"></div>
    <div id="cnblogs_c1" class="c_ad_block">
        <div id='div-gpt-ad-1592365906576-0' style='width: 300px; height: 250px;'></div>
    </div>
    <div id="under_post_news"></div>
    <div id="cnblogs_c2" class="c_ad_block">
        <div id='div-gpt-ad-1592366332455-0' style='width: 468px; height: 60px;'></div>
    </div>
    <div id="under_post_kb"></div>
    <div id="HistoryToday" class="c_ad_block"></div>
    <script type="text/javascript">
        fixPostBody();
        deliverBigBanner();
setTimeout(function() { incrementViewCount(cb_entryId); }, 50);        deliverT2();
        deliverC1C2();
        loadNewsAndKb();
        loadBlogSignature();
LoadPostCategoriesTags(cb_blogId, cb_entryId);        LoadPostInfoBlock(cb_blogId, cb_entryId, cb_blogApp, cb_blogUserGuid);
        GetPrevNextPost(cb_entryId, cb_blogId, cb_entryCreatedDate, cb_postType);
        loadOptUnderPost();
        GetHistoryToday(cb_blogId, cb_blogApp, cb_entryCreatedDate);
    </script>
</div>
	</div><!--end: forFlow -->
	</div><!--end: mainContent 主体内容容器-->

	<div id="sideBar">
		<div id="sideBarMain">
			
<div id="sidebar_news" class="newsItem">
            <script>loadBlogNews();</script>
</div>

<div id="sidebar_ad"></div>
			<div id="blog-calendar" style="display:none"></div><script>loadBlogDefaultCalendar();</script>
			
			<div id="leftcontentcontainer">
				<div id="blog-sidecolumn"></div>
                    <script>loadBlogSideColumn();</script>
			</div>
			
		</div><!--end: sideBarMain -->
	</div><!--end: sideBar 侧边栏容器 -->
	<div class="clear"></div>
	</div><!--end: main -->
	<div class="clear"></div>
	<div id="footer">
		<!--done-->
Copyright &copy; 2020 Linux-1874
<br /><span id="poweredby">Powered by .NET Core on Kubernetes</span>



	</div><!--end: footer -->
</div><!--end: home 自定义的最大容器 -->


    <div id="page_end_html">
        <!--评论带头像 -->
<script type="text/javascript" src="https://blog-static.cnblogs.com/files/qiuhom-1874/Comments.js"></script>

<!--评论像微信样式 -->
<link  type="text/css" rel="stylesheet" href="https://blog-static.cnblogs.com/files/qiuhom-1874/comment.css">
<script type="text/javascript">
$(function(){
    $('#blogTitle h1').addClass('bounceInLeft animated');
    $('#blogTitle h2').addClass('bounceInRight animated');
    // 删除反对按钮    $('.buryit').remove();
    initCommentData();
});
function initCommentData() {
    $('.feedbackItem').each(function() {
        var text = $(this).find('.feedbackListSubtitle .layer').text();
        // 将楼层信息放到data里面
        // $(this).find('.blog_comment_body').attr('data-louceng', text.replace(/^#/g, ''));
        if($(this).find('.feedbackListSubtitle .louzhu').length>0) $(this).addClass('myself');
        var avatar = $(this).find('> .feedbackCon > span').html() || 'http://pic.cnitblog.com/face/sample_face.gif';
        $(this).find('> .feedbackCon > .blog_comment_body').append('<img class="user-avatar" src="'+avatar+'"/>')
    });
}
$(document).ajaxComplete(function(event, xhr, settings) {
  // 监听获取评论ajax事件
  if(settings.url.indexOf('/mvc/blog/GetComments.aspx') >= 0) {
    initCommentData();
  }
});
</script>

<!--回到顶部小火箭 -->
<link href="https://blog-static.cnblogs.com/files/qiuhom-1874/scroller.css" type="text/css" rel="stylesheet">
 <script src="https://blog-static.cnblogs.com/files/qiuhom-1874/scrollspy.js" type="text/javascript"></script>
 <script src="https://blog-static.cnblogs.com/files/qiuhom-1874/stickUp.min.js" type="text/javascript"></script>
<style>
#back-top {
     position: fixed;
     bottom: 10px;
     right: 5px;
     z-index: 99;
}
#back-top span {
     width: 50px;
     height: 64px;
     display: block;
     background:url(https://images.cnblogs.com/cnblogs_com/qiuhom-1874/1640280/o_200201115539hj.png) no-repeat center center;
}
#back-top a{outline:none}
</style>
<script type="text/javascript">
$(function() {
    // hide #back-top first
    $("#back-top").hide();
    // fade in #back-top
    $(window).scroll(function() {
        if ($(this).scrollTop() > 500) {
            $('#back-top').fadeIn();
        } else {
            $('#back-top').fadeOut();
        }
    });
    // scroll body to 0px on click
    $('#back-top a').click(function() {
        $('body,html').animate({
            scrollTop: 0
        }, 800);
        return false;
    });
});
</script>
<p id="back-top" style="display:none"><a href="#top"><span></span></a></p>

<!-- lightbox的样式 -->
<link href="https://blog-static.cnblogs.com/files/qiuhom-1874/lightbox.css" rel="stylesheet">
<!-- lightbox.js核心代码 -->
<script src="https://blog-static.cnblogs.com/files/qiuhom-1874/lightbox-plus-jquery.js"></script>
<script type='text/javascript'>$('#cnblogs_post_body img').wrap(function(){return "<a href='"+$(this).attr("src")+"' data-lightbox='example-set'></a>"});</script>
<script type='text/javascript'>$(".code_img_closed").unwrap();</script>
<script type='text/javascript'>$(".code_img_opened").unwrap();</script>



    </div>
</body>
</html>
